#떡을 잘라야한느데 손님이 원하는 크기를 자르기 위해서 절단기의 위치가 어디에 있어야 만족하는 길이를 만들 수 있을까?
#범위가 좁으면 그리디문제일 수도 있다. 하지만 범위가 너무 크면 정렬이나 탐색의 알고리즘 문제일 수 있다.

#가장 긴 떡 기준으로 중간점 인덱스를 잡아서 인덱스 기준으로 잘라주면 남은 길이가 남아있다.


x, y = list(map(int, input('떡의 갯수와 주문할 떡의 길이를 입력하세요 : ').split(' '))) #떡의 개수와 요청한 떡의 길이를 입력받는다.

array = list(map(int, input('각각 떡의 높이를 입력하세요 : ').split(' ')))

#이진 탐색을 위한 시작점과 끝점을 설정
start = 0
end = max(array) # 입력한 떡의 길이 중 가장 긴 떡의 길이로 설정해서 이진탐색을 해야하기 때문.

#이진 탐색 수행(반복)
result = 0
while start <= end :
    total = 0
    mid = (start + end)//2 #가운데 출력하기 위함 (몫만)
    
    for x in array :
        if x > mid: #array에 있는 떡의 길이가 mid(중간값보다)크다면?
            total += x - mid #total에다가 떡의 길이에서 중간값을 뺀 만큼을 저장한다.
    
    if total < y: #잘라놓은 떡의 길이가 y(지정한 길이)보다 작다면
        end = mid - 1 #중간에서 1을 빼서 끝값으로 저장한다.
    else :
        result = mid #최대한 덜 잘랐을 때가 정답이여서 여기서 저장
        
        start = mid + 1 
        
print(result)